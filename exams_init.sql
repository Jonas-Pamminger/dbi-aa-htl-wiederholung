--------------------------------------------
-- Initialize Administration User and Schema
--------------------------------------------
CREATE ROLE admin_role;

GRANT CONNECT TO admin_role;
GRANT RESOURCE TO admin_role;

CREATE USER administrator
IDENTIFIED BY administrator
DEFAULT TABLESPACE USERS
TEMPORARY TABLESPACE temp
QUOTA UNLIMITED ON USERS;

GRANT admin_role TO administrator;

CREATE TABLE administrator.Subject (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    CONSTRAINT pk_subject PRIMARY KEY (id),

    name VARCHAR2(100) NOT NULL UNIQUE
);

CREATE TABLE administrator.Class (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    CONSTRAINT pk_class PRIMARY KEY (id),

    name VARCHAR2(100) NOT NULL UNIQUE
);

CREATE TABLE administrator.Person (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    CONSTRAINT pk_person PRIMARY KEY (id),

    firstname VARCHAR2(100) NOT NULL,
    lastname VARCHAR2(100) NOT NULL,

    class_id NUMBER,
    CONSTRAINT fk_person_class FOREIGN KEY (class_id) REFERENCES administrator.Class(id)
);

CREATE TABLE administrator.Competence (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    CONSTRAINT pk_competence PRIMARY KEY (id),

    description VARCHAR2(100) NOT NULL UNIQUE,

    person_id NUMBER,
    CONSTRAINT fk_competence_person
        FOREIGN KEY (person_id) REFERENCES administrator.Person(id),

    subject_id NUMBER,
    CONSTRAINT fk_competence_subject
        FOREIGN KEY (subject_id) REFERENCES administrator.Subject(id)
);

CREATE TABLE administrator.RoomType (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    CONSTRAINT pk_room_type PRIMARY KEY (id),

    type VARCHAR2(100) NOT NULL UNIQUE
);

CREATE TABLE administrator.Room (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    CONSTRAINT pk_room PRIMARY KEY (id),

    designation VARCHAR2(100) NOT NULL UNIQUE,

    type_id NUMBER NOT NULL,
    CONSTRAINT fk_room_room_type FOREIGN KEY (type_id) REFERENCES administrator.RoomType(id)
);

CREATE TABLE administrator.ExamRole (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    CONSTRAINT pk_exam_role PRIMARY KEY (id),

    role VARCHAR2(100) NOT NULL UNIQUE
);

CREATE TABLE administrator.Exam (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    CONSTRAINT pk_exam PRIMARY KEY (id),

    title VARCHAR2(100) NOT NULL,
    exam_date TIMESTAMP NOT NULL,

    subject_id NUMBER NOT NULL,
    CONSTRAINT fk_exam_subject FOREIGN KEY (subject_id) REFERENCES administrator.Subject(id),

    room_id NUMBER,
    CONSTRAINT fk_exam_room FOREIGN KEY (room_id) REFERENCES administrator.Room(id)
);

CREATE TABLE administrator.Participant (
    exam_id NUMBER,
    CONSTRAINT fk_participant_exam FOREIGN KEY (exam_id) REFERENCES administrator.Exam(id),

    person_id NUMBER,
    CONSTRAINT fk_participant_person FOREIGN KEY (person_id) REFERENCES administrator.Person(id),

    exam_role_id NUMBER,
    CONSTRAINT fk_participant_exam_role FOREIGN KEY (exam_role_id) REFERENCES administrator.ExamRole(id),

    CONSTRAINT pk_participant PRIMARY KEY (exam_id, person_id, exam_role_id),

    score NUMBER
);

--------------------------------------------
-- Initialize Teacher User
--------------------------------------------
CREATE ROLE teacher_role;

CREATE USER teacher
IDENTIFIED BY teacher
DEFAULT TABLESPACE USERS
TEMPORARY TABLESPACE temp
QUOTA UNLIMITED ON USERS;

GRANT CREATE SESSION TO teacher_role;
GRANT SELECT ON administrator.Exam TO teacher_role;
GRANT SELECT ON administrator.Room TO teacher_role;
GRANT SELECT ON administrator.Participant TO teacher_role;
GRANT SELECT ON administrator.Subject TO teacher_role;

GRANT INSERT ON administrator.Exam TO teacher_role;
GRANT INSERT ON administrator.Participant TO teacher_role;

GRANT teacher_role TO teacher;

--------------------------------------------
-- Initialize Student User
--------------------------------------------
CREATE ROLE student_role;

CREATE USER student
IDENTIFIED BY student
DEFAULT TABLESPACE USERS
TEMPORARY TABLESPACE temp
QUOTA UNLIMITED ON USERS;

GRANT CREATE SESSION TO student_role; -- Basic privilege for all users

-- Grant SELECT privilege on specific tables (Subject, administrator.Class, Test, administrator.Participant)
GRANT SELECT ON administrator.Class TO student_role;
GRANT SELECT ON administrator.Participant TO student_role;
GRANT SELECT ON administrator.Subject TO student_role;

GRANT student_role TO student;

-- Commit the changes
COMMIT;

--------------------------------------------
-- Initialize Mockup data
--------------------------------------------
-- Fächer
INSERT INTO administrator.Subject (id, name) VALUES (1, 'Mathematik');
INSERT INTO administrator.Subject (id, name) VALUES (2, 'Informatik');
INSERT INTO administrator.Subject (id, name) VALUES (3, 'Geschichte');
INSERT INTO administrator.Subject (id, name) VALUES (4, 'Biologie');
INSERT INTO administrator.Subject (id, name) VALUES (5, 'Chemie');
INSERT INTO administrator.Subject (id, name) VALUES (6, 'Physik');

-- Klassen
INSERT INTO administrator.Class (id, name) VALUES (1, 'Klasse A');
INSERT INTO administrator.Class (id, name) VALUES (2, 'Klasse B');
INSERT INTO administrator.Class (id, name) VALUES (3, 'Klasse C');
INSERT INTO administrator.Class (id, name) VALUES (4, 'Klasse D');

-- Personen
INSERT INTO administrator.Person (id, firstname, lastname, class_id) VALUES (1, 'Max', 'Mustermann', 1);
INSERT INTO administrator.Person (id, firstname, lastname, class_id) VALUES (2, 'Lisa', 'Musterfrau', 2);
INSERT INTO administrator.Person (id, firstname, lastname) VALUES (3, 'Lehrer', 'Lehrerson');
INSERT INTO administrator.Person (id, firstname, lastname, class_id) VALUES (4, 'Paul', 'Schüler', 1);
INSERT INTO administrator.Person (id, firstname, lastname, class_id) VALUES (5, 'Anna', 'Schülerin', 2);
INSERT INTO administrator.Person (id, firstname, lastname) VALUES (6, 'Lehrer2', 'Lehrerson2');

-- Kompetenzen
INSERT INTO administrator.Competence (id, description, person_id, subject_id) VALUES (1, 'Mathematiklehrer', 3, 1);
INSERT INTO administrator.Competence (id, description, person_id, subject_id) VALUES (2, 'Informatiklehrer', 3, 2);
INSERT INTO administrator.Competence (id, description, person_id, subject_id) VALUES (3, 'Geschichtslehrer', 3, 3);
INSERT INTO administrator.Competence (id, description, person_id, subject_id) VALUES (4, 'Biologielehrer', 6, 4);
INSERT INTO administrator.Competence (id, description, person_id, subject_id) VALUES (5, 'Chemielehrer', 6, 5);
INSERT INTO administrator.Competence (id, description, person_id, subject_id) VALUES (6, 'Physiklehrer', 6, 6);

-- Raumtypen
INSERT INTO administrator.RoomType (id, type) VALUES (1, 'Klassenzimmer');
INSERT INTO administrator.RoomType (id, type) VALUES (2, 'EDV-Saal');

-- Räume
INSERT INTO administrator.Room (id, designation, type_id) VALUES (1, 'Raum 101', 1);
INSERT INTO administrator.Room (id, designation, type_id) VALUES (2, 'EDV-Saal 1', 2);
INSERT INTO administrator.Room (id, designation, type_id) VALUES (3, 'Raum 102', 1);
INSERT INTO administrator.Room (id, designation, type_id) VALUES (4, 'EDV-Saal 2', 2);

-- Rollen
INSERT INTO administrator.ExamRole (id, role) VALUES (1, 'Schüler');
INSERT INTO administrator.ExamRole (id, role) VALUES (2, 'Prüfer');
INSERT INTO administrator.ExamRole (id, role) VALUES (3, 'Aufsichtsperson');

-- Tests
INSERT INTO administrator.Exam (id, title, exam_date, subject_id, room_id) VALUES (1, 'Mathe-Test', TO_TIMESTAMP('2023-09-30 10:00:00', 'YYYY-MM-DD HH24:MI:SS'), 1, NULL);
INSERT INTO administrator.Exam (id, title, exam_date, subject_id, room_id) VALUES (2, 'Informatik-Test', TO_TIMESTAMP('2023-10-05 14:00:00', 'YYYY-MM-DD HH24:MI:SS'), 2, 2);
INSERT INTO administrator.Exam (id, title, exam_date, subject_id, room_id) VALUES (3, 'Biologie-Test', TO_TIMESTAMP('2023-10-10 09:00:00', 'YYYY-MM-DD HH24:MI:SS'), 4, 3);
INSERT INTO administrator.Exam (id, title, exam_date, subject_id, room_id) VALUES (4, 'Chemie-Test', TO_TIMESTAMP('2023-10-12 15:00:00', 'YYYY-MM-DD HH24:MI:SS'), 5, 4);
INSERT INTO administrator.Exam (id, title, exam_date, subject_id, room_id) VALUES (5, 'Physik-Test', TO_TIMESTAMP('2023-10-15 11:00:00', 'YYYY-MM-DD HH24:MI:SS'), 6, 3);

-- Teilnehmer
INSERT INTO administrator.Participant (exam_id, person_id, exam_role_id, score) VALUES (1, 1, 1, 85);
INSERT INTO administrator.Participant (exam_id, person_id, exam_role_id, score) VALUES (1, 2, 1, 92);
INSERT INTO administrator.Participant (exam_id, person_id, exam_role_id, score) VALUES (1, 3, 2, NULL);
INSERT INTO administrator.Participant (exam_id, person_id, exam_role_id, score) VALUES (2, 1, 2, NULL);
INSERT INTO administrator.Participant (exam_id, person_id, exam_role_id, score) VALUES (3, 4, 1, 88);
INSERT INTO administrator.Participant (exam_id, person_id, exam_role_id, score) VALUES (3, 5, 1, 90);
INSERT INTO administrator.Participant (exam_id, person_id, exam_role_id, score) VALUES (4, 4, 2, NULL);
INSERT INTO administrator.Participant (exam_id, person_id, exam_role_id, score) VALUES (4, 6, 2, NULL);
INSERT INTO administrator.Participant (exam_id, person_id, exam_role_id, score) VALUES (5, 5, 2, NULL);
INSERT INTO administrator.Participant (exam_id, person_id, exam_role_id, score) VALUES (5, 6, 2, NULL);